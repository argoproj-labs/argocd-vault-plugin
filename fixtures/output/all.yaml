apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    avp.kubernetes.io/kv-version: "1"
    avp.kubernetes.io/path: secret/testing
  labels:
    app: test-name
    version: "1.0"
  name: test-name
  namespace: test-namespace
spec:
  minReadySeconds: 5
  replicas: "2"
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: test-name
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: test-name
      name: test-name
    spec:
      containers:
      - image: foo.com/test-name:1.0
        imagePullPolicy: Always
        name: test-name
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    avp.kubernetes.io/path: kv/data/testing
  labels:
    app: test-kv-name
  name: test-kv-name
  namespace: test-kv-namespace
spec:
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: 80
  selector:
    app: test-kv-name
  type: NodePort
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    avp.kubernetes.io/path: kv/data/testing
  labels:
    app: test-kv-name
    version: "1.2"
  name: test-kv-name
  namespace: test-kv-namespace
spec:
  minReadySeconds: 5
  replicas: "3"
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: test-kv-name
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: test-kv-name
      name: test-kv-name
    spec:
      containers:
      - image: foo.com/test-kv-name:1.1
        imagePullPolicy: Always
        name: test-kv-name
---
apiVersion: v1
data:
  MY_SECRET_NUM: <num>
  MY_SECRET_STRING: <string>
kind: Secret
metadata:
  annotations:
    avp.kubernetes.io/ignore: "True"
  name: my-app
  namespace: default
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    avp.kubernetes.io/kv-version: "1"
    avp.kubernetes.io/path: secret/json
  name: modifiers-test
  namespace: modifiers-test
spec:
  minReadySeconds: 5
  replicas: 2
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: modifiers-test
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: modifiers-test
    spec:
      containers:
      - image: foo.com/json-test:latest
        imagePullPolicy: Always
        name: modifiers-test
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    avp.kubernetes.io/kv-version: "1"
    avp.kubernetes.io/path: secret/json
  labels:
    app: modifiers-test
  name: modifiers-test
  namespace: modifiers-test
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 80
  - port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    app: modifiers-test
  type: NodePort
---
apiVersion: v1
data:
  ESECRET: c2VjcmV0Mg==
  PASSWORD: dGVzdC1wYXNzd29yZA==
  SHA256SUM: ZmNkZTJiMmVkYmE1NmJmNDA4NjAxZmI3MjFmZTliNWMzMzhkMTBlZTQyOWVhMDRmYWU1NTExYjY4ZmJmOGZiOQ==
  USER: dGVzdC11c2Vy
  YAML: c2VjcmV0MQ==
kind: Secret
metadata:
  annotations:
    avp.kubernetes.io/kv-version: "1"
  name: modifiers-test
  namespace: modifiers-test
type: Opaque
---
apiVersion: v1
data:
  SECRET_NUM: MQ==
  SECRET_VAR: dGVzdC1wYXNzd29yZA==
kind: Secret
metadata:
  annotations:
    avp.kubernetes.io/kv-version: "1"
    avp.kubernetes.io/path: secret/testing
  name: test-name-json
  namespace: test-namespace
type: Opaque
---
apiVersion: v1
data:
  SECRET_NUM: MQ==
  SECRET_VAR: dGVzdC1wYXNzd29yZA==
kind: Secret
metadata:
  annotations:
    avp.kubernetes.io/kv-version: "1"
    avp.kubernetes.io/path: secret/testing
  name: test-name
  namespace: test-namespace
type: Opaque
---
apiVersion: v1
data:
  secret.yaml: c29tZQ==dGVzdC1wYXNzd29yZA==dmFsdWU=
kind: Secret
metadata:
  annotations:
    avp.kubernetes.io/kv-version: "1"
    avp.kubernetes.io/path: secret/testing
  name: embedded-secret-base64
  namespace: default
type: Opaque
---
apiVersion: v1
data:
  SECRET_VAR: dGVzdC1wYXNzd29yZA==,dGVzdC1wYXNzd29yZDI=
kind: Secret
metadata:
  annotations:
    avp.kubernetes.io/kv-version: "1"
  name: example-secret-multi
  namespace: default
type: Opaque
---
apiVersion: v1
data:
  SECRET_VAR: dGVzdC1wYXNzd29yZA==
  SECRET_VAR_VERSIONED: dGVzdC1wYXNzd29yZA==
kind: Secret
metadata:
  annotations:
    avp.kubernetes.io/kv-version: "1"
  name: example-secret
  namespace: default
type: Opaque
---
apiVersion: v1
data:
  SECRET_KEY: dGVzdC1wYXNzd29yZA==
  dGVzdC1wYXNzd29yZA==: SECRET_VAL
  dGVzdC1wYXNzd29yZDI=: dGVzdC1wYXNzd29yZA==
kind: Secret
metadata:
  annotations:
    avp.kubernetes.io/kv-version: "1"
    avp.kubernetes.io/path: secret/testing
  name: example-secret-key-value-annotation-path
  namespace: test-namespace
type: Opaque
---
apiVersion: v1
data:
  SECRET_VAR: dGVzdC1wYXNzd29yZA==
kind: Secret
metadata:
  annotations:
    avp.kubernetes.io/kv-version: "1"
  name: example-secret-base64
  namespace: default
type: Opaque
---
apiVersion: v1
data:
  secret.yaml: cGFzc3dvcmQxOiB0ZXN0LXBhc3N3b3JkCnBhc3N3b3JkMjogdGVzdC1wYXNzd29yZA==
kind: Secret
metadata:
  annotations:
    avp.kubernetes.io/kv-version: "1"
  name: example-secret-base64-substring
  namespace: default
type: Opaque
---
apiVersion: v1
data:
  SECRET_KEY: dGVzdC1wYXNzd29yZA==
  dGVzdC1wYXNzd29yZA==: SECRET_VAL
  dGVzdC1wYXNzd29yZDI=: dGVzdC1wYXNzd29yZA==
kind: Secret
metadata:
  annotations:
    avp.kubernetes.io/kv-version: "1"
  name: example-secret-key-value
  namespace: default
type: Opaque
---
apiVersion: v1
data:
  PORT: 80
kind: Secret
metadata:
  annotations:
    avp.kubernetes.io/path: kv/data/testing
    avp.kubernetes.io/remove-missing: "true"
  name: my-app
  namespace: default
---
apiVersion: v1
data:
  SECRET_VAR: version1
  SECRET_VAR_CURRENT: version2
  SECRET_VAR_V2: version2
kind: Secret
metadata:
  annotations:
    avp.kubernetes.io/kv-version: "2"
    avp.kubernetes.io/path: kv/data/versioned
    avp.kubernetes.io/secret-version: "1"
  name: example-secret
  namespace: default
type: Opaque
---
